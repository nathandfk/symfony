<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Reservation extends \App\Entity\Reservation implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Reservation' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Reservation' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Reservation' . "\0" . 'dwelling', '' . "\0" . 'App\\Entity\\Reservation' . "\0" . 'statut', '' . "\0" . 'App\\Entity\\Reservation' . "\0" . 'startDate', '' . "\0" . 'App\\Entity\\Reservation' . "\0" . 'endDate', '' . "\0" . 'App\\Entity\\Reservation' . "\0" . 'reservedAt', '' . "\0" . 'App\\Entity\\Reservation' . "\0" . 'updatedAt', '' . "\0" . 'App\\Entity\\Reservation' . "\0" . 'reservationMetas'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Reservation' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Reservation' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Reservation' . "\0" . 'dwelling', '' . "\0" . 'App\\Entity\\Reservation' . "\0" . 'statut', '' . "\0" . 'App\\Entity\\Reservation' . "\0" . 'startDate', '' . "\0" . 'App\\Entity\\Reservation' . "\0" . 'endDate', '' . "\0" . 'App\\Entity\\Reservation' . "\0" . 'reservedAt', '' . "\0" . 'App\\Entity\\Reservation' . "\0" . 'updatedAt', '' . "\0" . 'App\\Entity\\Reservation' . "\0" . 'reservationMetas'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Reservation $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\Users
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(?\App\Entity\Users $user): \App\Entity\Reservation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getDwelling(): ?\App\Entity\Dwelling
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDwelling', []);

        return parent::getDwelling();
    }

    /**
     * {@inheritDoc}
     */
    public function setDwelling(?\App\Entity\Dwelling $dwelling): \App\Entity\Reservation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDwelling', [$dwelling]);

        return parent::setDwelling($dwelling);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatut(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatut', []);

        return parent::getStatut();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatut(string $statut): \App\Entity\Reservation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatut', [$statut]);

        return parent::setStatut($statut);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartDate(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartDate', []);

        return parent::getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartDate(\DateTimeInterface $startDate): \App\Entity\Reservation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartDate', [$startDate]);

        return parent::setStartDate($startDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndDate(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndDate', []);

        return parent::getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndDate(\DateTimeInterface $endDate): \App\Entity\Reservation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndDate', [$endDate]);

        return parent::setEndDate($endDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getReservedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReservedAt', []);

        return parent::getReservedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setReservedAt(\DateTimeInterface $reservedAt): \App\Entity\Reservation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReservedAt', [$reservedAt]);

        return parent::setReservedAt($reservedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTimeInterface $updatedAt): \App\Entity\Reservation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getReservationMetas(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReservationMetas', []);

        return parent::getReservationMetas();
    }

    /**
     * {@inheritDoc}
     */
    public function addReservationMeta(\App\Entity\ReservationMeta $reservationMeta): \App\Entity\Reservation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReservationMeta', [$reservationMeta]);

        return parent::addReservationMeta($reservationMeta);
    }

    /**
     * {@inheritDoc}
     */
    public function removeReservationMeta(\App\Entity\ReservationMeta $reservationMeta): \App\Entity\Reservation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeReservationMeta', [$reservationMeta]);

        return parent::removeReservationMeta($reservationMeta);
    }

}
