<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Functions__CLASSMETADATA__' => 0,
'App__Entity__Country__CLASSMETADATA__' => 1,
'App__Entity__PostMeta__CLASSMETADATA__' => 2,
'App__Entity__Users__CLASSMETADATA__' => 3,
'App__Entity__Reservation__CLASSMETADATA__' => 4,
'App__Entity__DwellingMeta__CLASSMETADATA__' => 5,
'App__Entity__Dwelling__CLASSMETADATA__' => 6,
'App__Entity__UserMeta__CLASSMETADATA__' => 7,
'App__Entity__Message__CLASSMETADATA__' => 8,
'App__Entity__Posts__CLASSMETADATA__' => 9,
'App__Entity__ReservationMeta__CLASSMETADATA__' => 10,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Functions',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Functions',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\FunctionsRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'title' => [
                            'fieldName' => 'title',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 150,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'title',
                        ],
                        'abstract' => [
                            'fieldName' => 'abstract',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'abstract',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'description',
                        ],
                        'bool' => [
                            'fieldName' => 'bool',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'bool',
                        ],
                        'percent' => [
                            'fieldName' => 'percent',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 25,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'percent',
                        ],
                        'price' => [
                            'fieldName' => 'price',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'price',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 50,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'type',
                        ],
                        'addedAt' => [
                            'fieldName' => 'addedAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'added_at',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'title' => 'title',
                        'abstract' => 'abstract',
                        'description' => 'description',
                        'bool' => 'bool',
                        'percent' => 'percent',
                        'price' => 'price',
                        'type' => 'type',
                        'added_at' => 'addedAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'title' => 'title',
                        'abstract' => 'abstract',
                        'description' => 'description',
                        'bool' => 'bool',
                        'percent' => 'percent',
                        'price' => 'price',
                        'type' => 'type',
                        'addedAt' => 'added_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'functions',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Country',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Country',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CountryRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'code' => [
                            'fieldName' => 'code',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'code',
                        ],
                        'alpha2' => [
                            'fieldName' => 'alpha2',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 2,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'alpha2',
                        ],
                        'alpha3' => [
                            'fieldName' => 'alpha3',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 3,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'alpha3',
                        ],
                        'nameEnGb' => [
                            'fieldName' => 'nameEnGb',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 75,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'name_en_gb',
                        ],
                        'nameFr' => [
                            'fieldName' => 'nameFr',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 75,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'name_fr',
                        ],
                        'europe' => [
                            'fieldName' => 'europe',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'europe',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'code' => 'code',
                        'alpha2' => 'alpha2',
                        'alpha3' => 'alpha3',
                        'name_en_gb' => 'nameEnGb',
                        'name_fr' => 'nameFr',
                        'europe' => 'europe',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'code' => 'code',
                        'alpha2' => 'alpha2',
                        'alpha3' => 'alpha3',
                        'nameEnGb' => 'name_en_gb',
                        'nameFr' => 'name_fr',
                        'europe' => 'europe',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'country',
                    ],
                ],
                'associationMappings' => [
                    [
                        'dwellings' => [
                            'fieldName' => 'dwellings',
                            'mappedBy' => 'country',
                            'targetEntity' => 'App\\Entity\\Dwelling',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Country',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'users' => [
                            'fieldName' => 'users',
                            'mappedBy' => 'Country',
                            'targetEntity' => 'App\\Entity\\Users',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Country',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\PostMeta',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\PostMeta',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PostMetaRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'field' => [
                            'fieldName' => 'field',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 150,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'field',
                        ],
                        'value' => [
                            'fieldName' => 'value',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'value',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'field' => 'field',
                        'value' => 'value',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'field' => 'field',
                        'value' => 'value',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'post_meta',
                    ],
                ],
                'associationMappings' => [
                    [
                        'post' => [
                            'fieldName' => 'post',
                            'joinColumns' => [
                                [
                                    'name' => 'post_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'postMetas',
                            'targetEntity' => 'App\\Entity\\Posts',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\PostMeta',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'post_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'post_id' => 'post_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'post_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Users',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Users',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UsersRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'firstName' => [
                            'fieldName' => 'firstName',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'first_name',
                        ],
                        'lastName' => [
                            'fieldName' => 'lastName',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 50,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'last_name',
                        ],
                        'society' => [
                            'fieldName' => 'society',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 50,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'society',
                        ],
                        'birthday' => [
                            'fieldName' => 'birthday',
                            'type' => 'date',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'birthday',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 150,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'email',
                        ],
                        'phoneNumber' => [
                            'fieldName' => 'phoneNumber',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 25,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'phone_number',
                        ],
                        'roles' => [
                            'fieldName' => 'roles',
                            'type' => 'json',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'roles',
                        ],
                        'address' => [
                            'fieldName' => 'address',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 150,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'address',
                        ],
                        'complAddress' => [
                            'fieldName' => 'complAddress',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'compl_address',
                        ],
                        'city' => [
                            'fieldName' => 'city',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 75,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'city',
                        ],
                        'activationKey' => [
                            'fieldName' => 'activationKey',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'activation_key',
                        ],
                        'statut' => [
                            'fieldName' => 'statut',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'statut',
                        ],
                        'host' => [
                            'fieldName' => 'host',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 50,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'host',
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'password',
                        ],
                        'addedAt' => [
                            'fieldName' => 'addedAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'added_at',
                        ],
                        'updatedAt' => [
                            'fieldName' => 'updatedAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'updated_at',
                        ],
                        'account' => [
                            'fieldName' => 'account',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'account',
                        ],
                        'deletedAt' => [
                            'fieldName' => 'deletedAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'deleted_at',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'first_name' => 'firstName',
                        'last_name' => 'lastName',
                        'society' => 'society',
                        'birthday' => 'birthday',
                        'email' => 'email',
                        'phone_number' => 'phoneNumber',
                        'roles' => 'roles',
                        'address' => 'address',
                        'compl_address' => 'complAddress',
                        'city' => 'city',
                        'activation_key' => 'activationKey',
                        'statut' => 'statut',
                        'host' => 'host',
                        'password' => 'password',
                        'added_at' => 'addedAt',
                        'updated_at' => 'updatedAt',
                        'account' => 'account',
                        'deleted_at' => 'deletedAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'firstName' => 'first_name',
                        'lastName' => 'last_name',
                        'society' => 'society',
                        'birthday' => 'birthday',
                        'email' => 'email',
                        'phoneNumber' => 'phone_number',
                        'roles' => 'roles',
                        'address' => 'address',
                        'complAddress' => 'compl_address',
                        'city' => 'city',
                        'activationKey' => 'activation_key',
                        'statut' => 'statut',
                        'host' => 'host',
                        'password' => 'password',
                        'addedAt' => 'added_at',
                        'updatedAt' => 'updated_at',
                        'account' => 'account',
                        'deletedAt' => 'deleted_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'users',
                    ],
                ],
                'associationMappings' => [
                    [
                        'Country' => [
                            'fieldName' => 'Country',
                            'joinColumns' => [
                                [
                                    'name' => 'country_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'users',
                            'targetEntity' => 'App\\Entity\\Country',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Users',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'country_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'country_id' => 'country_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'country_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'userMetas' => [
                            'fieldName' => 'userMetas',
                            'mappedBy' => 'user',
                            'targetEntity' => 'App\\Entity\\UserMeta',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Users',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'dwellings' => [
                            'fieldName' => 'dwellings',
                            'mappedBy' => 'user',
                            'targetEntity' => 'App\\Entity\\Dwelling',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Users',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'posts' => [
                            'fieldName' => 'posts',
                            'mappedBy' => 'user',
                            'targetEntity' => 'App\\Entity\\Posts',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Users',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'reservations' => [
                            'fieldName' => 'reservations',
                            'mappedBy' => 'user',
                            'targetEntity' => 'App\\Entity\\Reservation',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Users',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'messages' => [
                            'fieldName' => 'messages',
                            'mappedBy' => 'sender',
                            'targetEntity' => 'App\\Entity\\Message',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Users',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Reservation',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Reservation',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ReservationRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'statut' => [
                            'fieldName' => 'statut',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 50,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'statut',
                        ],
                        'startDate' => [
                            'fieldName' => 'startDate',
                            'type' => 'date',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'start_date',
                        ],
                        'endDate' => [
                            'fieldName' => 'endDate',
                            'type' => 'date',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'end_date',
                        ],
                        'reservedAt' => [
                            'fieldName' => 'reservedAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'reserved_at',
                        ],
                        'updatedAt' => [
                            'fieldName' => 'updatedAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'updated_at',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'statut' => 'statut',
                        'start_date' => 'startDate',
                        'end_date' => 'endDate',
                        'reserved_at' => 'reservedAt',
                        'updated_at' => 'updatedAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'statut' => 'statut',
                        'startDate' => 'start_date',
                        'endDate' => 'end_date',
                        'reservedAt' => 'reserved_at',
                        'updatedAt' => 'updated_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'reservation',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'reservations',
                            'targetEntity' => 'App\\Entity\\Users',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Reservation',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'dwelling' => [
                            'fieldName' => 'dwelling',
                            'joinColumns' => [
                                [
                                    'name' => 'dwelling_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'reservations',
                            'targetEntity' => 'App\\Entity\\Dwelling',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Reservation',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'dwelling_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'dwelling_id' => 'dwelling_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'dwelling_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'reservationMetas' => [
                            'fieldName' => 'reservationMetas',
                            'mappedBy' => 'reservation',
                            'targetEntity' => 'App\\Entity\\ReservationMeta',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Reservation',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\DwellingMeta',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\DwellingMeta',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\DwellingMetaRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'field' => [
                            'fieldName' => 'field',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 150,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'field',
                        ],
                        'value' => [
                            'fieldName' => 'value',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'value',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'field' => 'field',
                        'value' => 'value',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'field' => 'field',
                        'value' => 'value',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'dwelling_meta',
                    ],
                ],
                'associationMappings' => [
                    [
                        'dwelling' => [
                            'fieldName' => 'dwelling',
                            'joinColumns' => [
                                [
                                    'name' => 'dwelling_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'dwellingMetas',
                            'targetEntity' => 'App\\Entity\\Dwelling',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\DwellingMeta',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'dwelling_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'dwelling_id' => 'dwelling_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'dwelling_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Dwelling',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Dwelling',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\DwellingRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'pictures' => [
                            'fieldName' => 'pictures',
                            'type' => 'json',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'pictures',
                        ],
                        'title' => [
                            'fieldName' => 'title',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'title',
                        ],
                        'abstract' => [
                            'fieldName' => 'abstract',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'abstract',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'description',
                        ],
                        'price' => [
                            'fieldName' => 'price',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'price',
                        ],
                        'equipments' => [
                            'fieldName' => 'equipments',
                            'type' => 'json',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'equipments',
                        ],
                        'address' => [
                            'fieldName' => 'address',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 150,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'address',
                        ],
                        'complAddress' => [
                            'fieldName' => 'complAddress',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'compl_address',
                        ],
                        'city' => [
                            'fieldName' => 'city',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'city',
                        ],
                        'state' => [
                            'fieldName' => 'state',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'state',
                        ],
                        'longitude' => [
                            'fieldName' => 'longitude',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'longitude',
                        ],
                        'latitude' => [
                            'fieldName' => 'latitude',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'latitude',
                        ],
                        'activate' => [
                            'fieldName' => 'activate',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'activate',
                        ],
                        'addedAt' => [
                            'fieldName' => 'addedAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'added_at',
                        ],
                        'updatedAt' => [
                            'fieldName' => 'updatedAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'updated_at',
                        ],
                        'deletedAt' => [
                            'fieldName' => 'deletedAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'deleted_at',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'pictures' => 'pictures',
                        'title' => 'title',
                        'abstract' => 'abstract',
                        'description' => 'description',
                        'price' => 'price',
                        'equipments' => 'equipments',
                        'address' => 'address',
                        'compl_address' => 'complAddress',
                        'city' => 'city',
                        'state' => 'state',
                        'longitude' => 'longitude',
                        'latitude' => 'latitude',
                        'activate' => 'activate',
                        'added_at' => 'addedAt',
                        'updated_at' => 'updatedAt',
                        'deleted_at' => 'deletedAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'pictures' => 'pictures',
                        'title' => 'title',
                        'abstract' => 'abstract',
                        'description' => 'description',
                        'price' => 'price',
                        'equipments' => 'equipments',
                        'address' => 'address',
                        'complAddress' => 'compl_address',
                        'city' => 'city',
                        'state' => 'state',
                        'longitude' => 'longitude',
                        'latitude' => 'latitude',
                        'activate' => 'activate',
                        'addedAt' => 'added_at',
                        'updatedAt' => 'updated_at',
                        'deletedAt' => 'deleted_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'dwelling',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'dwellings',
                            'targetEntity' => 'App\\Entity\\Users',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Dwelling',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'joinColumns' => [
                                [
                                    'name' => 'type_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'dwellings',
                            'targetEntity' => 'App\\Entity\\Posts',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Dwelling',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'type_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'type_id' => 'type_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'type_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'country' => [
                            'fieldName' => 'country',
                            'joinColumns' => [
                                [
                                    'name' => 'country_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'dwellings',
                            'targetEntity' => 'App\\Entity\\Country',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Dwelling',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'country_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'country_id' => 'country_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'country_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'dwellingMetas' => [
                            'fieldName' => 'dwellingMetas',
                            'mappedBy' => 'dwelling',
                            'targetEntity' => 'App\\Entity\\DwellingMeta',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Dwelling',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'posts' => [
                            'fieldName' => 'posts',
                            'mappedBy' => 'dwelling',
                            'targetEntity' => 'App\\Entity\\Posts',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Dwelling',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'reservations' => [
                            'fieldName' => 'reservations',
                            'mappedBy' => 'dwelling',
                            'targetEntity' => 'App\\Entity\\Reservation',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Dwelling',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\UserMeta',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\UserMeta',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserMetaRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'field' => [
                            'fieldName' => 'field',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 150,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'field',
                        ],
                        'value' => [
                            'fieldName' => 'value',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'value',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'field' => 'field',
                        'value' => 'value',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'field' => 'field',
                        'value' => 'value',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user_meta',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'userMetas',
                            'targetEntity' => 'App\\Entity\\users',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\UserMeta',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Message',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Message',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\MessageRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'message' => [
                            'fieldName' => 'message',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'message',
                        ],
                        'senderDeleteMsg' => [
                            'fieldName' => 'senderDeleteMsg',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'sender_delete_msg',
                        ],
                        'recipientDeleteMsg' => [
                            'fieldName' => 'recipientDeleteMsg',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'recipient_delete_msg',
                        ],
                        'addedAt' => [
                            'fieldName' => 'addedAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'added_at',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'message' => 'message',
                        'sender_delete_msg' => 'senderDeleteMsg',
                        'recipient_delete_msg' => 'recipientDeleteMsg',
                        'added_at' => 'addedAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'message' => 'message',
                        'senderDeleteMsg' => 'sender_delete_msg',
                        'recipientDeleteMsg' => 'recipient_delete_msg',
                        'addedAt' => 'added_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'message',
                    ],
                ],
                'associationMappings' => [
                    [
                        'sender' => [
                            'fieldName' => 'sender',
                            'joinColumns' => [
                                [
                                    'name' => 'sender_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'messages',
                            'targetEntity' => 'App\\Entity\\Users',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Message',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'sender_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'sender_id' => 'sender_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'sender_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'recipient' => [
                            'fieldName' => 'recipient',
                            'joinColumns' => [
                                [
                                    'name' => 'recipient_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'messages',
                            'targetEntity' => 'App\\Entity\\Users',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Message',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'recipient_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'recipient_id' => 'recipient_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'recipient_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Posts',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Posts',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PostsRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 50,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'type',
                        ],
                        'title' => [
                            'fieldName' => 'title',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 150,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'title',
                        ],
                        'abstract' => [
                            'fieldName' => 'abstract',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 150,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'abstract',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'description',
                        ],
                        'statut' => [
                            'fieldName' => 'statut',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 50,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'statut',
                        ],
                        'number' => [
                            'fieldName' => 'number',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'number',
                        ],
                        'picture' => [
                            'fieldName' => 'picture',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'picture',
                        ],
                        'addedAt' => [
                            'fieldName' => 'addedAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'added_at',
                        ],
                        'updatedAt' => [
                            'fieldName' => 'updatedAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'updated_at',
                        ],
                        'deletedAt' => [
                            'fieldName' => 'deletedAt',
                            'type' => 'datetime_immutable',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'deleted_at',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'type' => 'type',
                        'title' => 'title',
                        'abstract' => 'abstract',
                        'description' => 'description',
                        'statut' => 'statut',
                        'number' => 'number',
                        'picture' => 'picture',
                        'added_at' => 'addedAt',
                        'updated_at' => 'updatedAt',
                        'deleted_at' => 'deletedAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'type' => 'type',
                        'title' => 'title',
                        'abstract' => 'abstract',
                        'description' => 'description',
                        'statut' => 'statut',
                        'number' => 'number',
                        'picture' => 'picture',
                        'addedAt' => 'added_at',
                        'updatedAt' => 'updated_at',
                        'deletedAt' => 'deleted_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'posts',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'posts',
                            'targetEntity' => 'App\\Entity\\Users',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Posts',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'dwelling' => [
                            'fieldName' => 'dwelling',
                            'joinColumns' => [
                                [
                                    'name' => 'dwelling_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'posts',
                            'targetEntity' => 'App\\Entity\\Dwelling',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Posts',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'dwelling_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'dwelling_id' => 'dwelling_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'dwelling_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'postMetas' => [
                            'fieldName' => 'postMetas',
                            'mappedBy' => 'post',
                            'targetEntity' => 'App\\Entity\\PostMeta',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Posts',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'dwellings' => [
                            'fieldName' => 'dwellings',
                            'mappedBy' => 'type',
                            'targetEntity' => 'App\\Entity\\Dwelling',
                            'cascade' => [],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Posts',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\ReservationMeta',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\ReservationMeta',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ReservationMetaRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'bigint',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'field' => [
                            'fieldName' => 'field',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 150,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'field',
                        ],
                        'value' => [
                            'fieldName' => 'value',
                            'type' => 'text',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'value',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'field' => 'field',
                        'value' => 'value',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'field' => 'field',
                        'value' => 'value',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'reservation_meta',
                    ],
                ],
                'associationMappings' => [
                    [
                        'reservation' => [
                            'fieldName' => 'reservation',
                            'joinColumns' => [
                                [
                                    'name' => 'reservation_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'reservationMetas',
                            'targetEntity' => 'App\\Entity\\Reservation',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\ReservationMeta',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'reservation_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'reservation_id' => 'reservation_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'reservation_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
