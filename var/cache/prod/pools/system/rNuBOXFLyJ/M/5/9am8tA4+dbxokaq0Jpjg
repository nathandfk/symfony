<?php //App_Entity_Posts

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Serializer\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\ClassMetadata')),
        clone ($p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata')),
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
        clone $p['Symfony\\Component\\Serializer\\Mapping\\AttributeMetadata'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'App\\Entity\\Posts',
                'id',
                'user',
                'dwelling',
                'type',
                'title',
                'abstract',
                'description',
                'statut',
                'number',
                'picture',
                'addedAt',
                'updatedAt',
                'postMetas',
                'dwellings',
                'deletedAt',
            ],
            'attributesMetadata' => [
                [
                    'id' => $o[1],
                    'user' => $o[2],
                    'dwelling' => $o[3],
                    'type' => $o[4],
                    'title' => $o[5],
                    'abstract' => $o[6],
                    'description' => $o[7],
                    'statut' => $o[8],
                    'number' => $o[9],
                    'picture' => $o[10],
                    'addedAt' => $o[11],
                    'updatedAt' => $o[12],
                    'postMetas' => $o[13],
                    'dwellings' => $o[14],
                    'deletedAt' => $o[15],
                ],
            ],
        ],
    ],
    $o[0],
    []
); }];
