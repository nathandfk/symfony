<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class City extends \App\Entity\City implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\City' . "\0" . 'id', '' . "\0" . 'App\\Entity\\City' . "\0" . 'department', '' . "\0" . 'App\\Entity\\City' . "\0" . 'slug', '' . "\0" . 'App\\Entity\\City' . "\0" . 'name', '' . "\0" . 'App\\Entity\\City' . "\0" . 'simpleName', '' . "\0" . 'App\\Entity\\City' . "\0" . 'realName', '' . "\0" . 'App\\Entity\\City' . "\0" . 'soundexName', '' . "\0" . 'App\\Entity\\City' . "\0" . 'zipCode', '' . "\0" . 'App\\Entity\\City' . "\0" . 'common', '' . "\0" . 'App\\Entity\\City' . "\0" . 'commonCode', '' . "\0" . 'App\\Entity\\City' . "\0" . 'arrondissement', '' . "\0" . 'App\\Entity\\City' . "\0" . 'dwellings'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\City' . "\0" . 'id', '' . "\0" . 'App\\Entity\\City' . "\0" . 'department', '' . "\0" . 'App\\Entity\\City' . "\0" . 'slug', '' . "\0" . 'App\\Entity\\City' . "\0" . 'name', '' . "\0" . 'App\\Entity\\City' . "\0" . 'simpleName', '' . "\0" . 'App\\Entity\\City' . "\0" . 'realName', '' . "\0" . 'App\\Entity\\City' . "\0" . 'soundexName', '' . "\0" . 'App\\Entity\\City' . "\0" . 'zipCode', '' . "\0" . 'App\\Entity\\City' . "\0" . 'common', '' . "\0" . 'App\\Entity\\City' . "\0" . 'commonCode', '' . "\0" . 'App\\Entity\\City' . "\0" . 'arrondissement', '' . "\0" . 'App\\Entity\\City' . "\0" . 'dwellings'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (City $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getDepartment(): ?\App\Entity\department
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepartment', []);

        return parent::getDepartment();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepartment(?\App\Entity\department $department): \App\Entity\City
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepartment', [$department]);

        return parent::setDepartment($department);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', []);

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug(string $slug): \App\Entity\City
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', [$slug]);

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \App\Entity\City
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getSimpleName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSimpleName', []);

        return parent::getSimpleName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSimpleName(string $simpleName): \App\Entity\City
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSimpleName', [$simpleName]);

        return parent::setSimpleName($simpleName);
    }

    /**
     * {@inheritDoc}
     */
    public function getRealName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRealName', []);

        return parent::getRealName();
    }

    /**
     * {@inheritDoc}
     */
    public function setRealName(string $realName): \App\Entity\City
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRealName', [$realName]);

        return parent::setRealName($realName);
    }

    /**
     * {@inheritDoc}
     */
    public function getSoundexName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSoundexName', []);

        return parent::getSoundexName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSoundexName(string $soundexName): \App\Entity\City
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSoundexName', [$soundexName]);

        return parent::setSoundexName($soundexName);
    }

    /**
     * {@inheritDoc}
     */
    public function getZipCode(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getZipCode', []);

        return parent::getZipCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setZipCode(string $zipCode): \App\Entity\City
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setZipCode', [$zipCode]);

        return parent::setZipCode($zipCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommon(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommon', []);

        return parent::getCommon();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommon(string $common): \App\Entity\City
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommon', [$common]);

        return parent::setCommon($common);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommonCode(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommonCode', []);

        return parent::getCommonCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommonCode(string $commonCode): \App\Entity\City
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommonCode', [$commonCode]);

        return parent::setCommonCode($commonCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getArrondissement(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArrondissement', []);

        return parent::getArrondissement();
    }

    /**
     * {@inheritDoc}
     */
    public function setArrondissement(string $arrondissement): \App\Entity\City
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArrondissement', [$arrondissement]);

        return parent::setArrondissement($arrondissement);
    }

    /**
     * {@inheritDoc}
     */
    public function getDwellings(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDwellings', []);

        return parent::getDwellings();
    }

    /**
     * {@inheritDoc}
     */
    public function addDwelling(\App\Entity\Dwelling $dwelling): \App\Entity\City
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDwelling', [$dwelling]);

        return parent::addDwelling($dwelling);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDwelling(\App\Entity\Dwelling $dwelling): \App\Entity\City
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDwelling', [$dwelling]);

        return parent::removeDwelling($dwelling);
    }

}
