security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\Users:
            algorithm: bcrypt
            cost: 12
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        from_database:
            entity:
                class: App\Entity\Users
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: from_database
            logout:
                path: logout
            # form_login:
                # check_path: users.login
                # login_path: users.login
                # enable_csrf: true
            custom_authenticator: App\Security\LoginFormAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/mon-compte, roles: ROLE_USER }
        - { path: ^/mon-compte/paiement, roles: ROLE_HOST }
        # - { path: ^/profile, roles: ROLE_USER }

# when@test:
# security:
    # password_hashers:
    #     App\Entity\Users:
    #         algorithm: bcrypt
    #         cost: 12

